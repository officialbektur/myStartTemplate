/* Functional styling;
 * These styles are required for noUiSlider to function.
 * You don't need to change these rules to apply your design.
 */
.noUi-target,
.noUi-target * {
	-webkit-touch-callout: none;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0);
	-webkit-user-select: none;
	-ms-touch-action: none;
	touch-action: none;
	-ms-user-select: none;
	-moz-user-select: none;
	user-select: none;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}
.noUi-target {
	position: relative;
}
.noUi-base,
.noUi-connects {
	width: 100%;
	height: 100%;
	position: relative;
	z-index: 1;
}
/* Wrapper for all connect elements.
 */
.noUi-connects {
	overflow: hidden;
	z-index: 0;
}
.noUi-connect,
.noUi-origin {
	will-change: transform;
	position: absolute;
	z-index: 1;
	top: 0;
	right: 0;
	height: 100%;
	width: 100%;
	-ms-transform-origin: 0 0;
	-webkit-transform-origin: 0 0;
	-webkit-transform-style: preserve-3d;
	transform-origin: 0 0;
	transform-style: flat;
}
/* Offset direction
 */
.noUi-txt-dir-rtl.noUi-horizontal .noUi-origin {
	left: 0;
	right: auto;
}
/* Give origins 0 height/width so they don't interfere with clicking the
 * connect elements.
 */
.noUi-vertical .noUi-origin {
	top: -100%;
	width: 0;
}
.noUi-horizontal .noUi-origin {
	height: 0;
}
.noUi-handle {
	backface-visibility: hidden;
	position: absolute;
}
.noUi-touch-area {
	height: 100%;
	width: 100%;
}
.noUi-state-tap .noUi-connect,
.noUi-state-tap .noUi-origin {
	transition: transform 0.3s;
}
.noUi-state-drag * {
	cursor: inherit !important;
}
/* Slider size and handle placement;
 */
.noUi-horizontal {
	height: toRem(18);
}
.noUi-horizontal .noUi-handle {
	width: toRem(34);
	height: toRem(28);
	right: toRem(-17);
	top: toRem(-6);
}
.noUi-vertical {
	width: toRem(18);
}
.noUi-vertical .noUi-handle {
	width: toRem(28);
	height: toRem(34);
	right: toRem(-6);
	bottom: toRem(-17);
}
.noUi-txt-dir-rtl.noUi-horizontal .noUi-handle {
	left: toRem(-17);
	right: auto;
}
/* Styling;
 * Giving the connect element a border radius causes issues with using transform: scale
 */
.noUi-target {
	background: #fafafa;
	border-radius: toRem(4);
	border: toRem(1) solid #d3d3d3;
	box-shadow: inset 0 toRem(1) toRem(1) #f0f0f0, 0 toRem(3) toRem(6) toRem(-5) #bbb;
}
.noUi-connects {
	border-radius: toRem(3);
}
.noUi-connect {
	background: #3fb8af;
}
/* Handles and cursors;
 */
.noUi-draggable {
	cursor: ew-resize;
}
.noUi-vertical .noUi-draggable {
	cursor: ns-resize;
}
.noUi-handle {
	border: toRem(1) solid #d9d9d9;
	border-radius: toRem(3);
	background: #fff;
	cursor: default;
	box-shadow: inset 0 0 toRem(1) #fff, inset 0 toRem(1) toRem(7) #ebebeb, 0 toRem(3) toRem(6) toRem(-3) #bbb;
}
.noUi-active {
	box-shadow: inset 0 0 toRem(1) #fff, inset 0 toRem(1) toRem(7) #ddd, 0 toRem(3) toRem(6) toRem(-3) #bbb;
}
/* Handle stripes;
 */
.noUi-handle:before,
.noUi-handle:after {
	content: "";
	display: block;
	position: absolute;
	height: toRem(14);
	width: toRem(1);
	background: #e8e7e6;
	left: toRem(14);
	top: toRem(6);
}
.noUi-handle:after {
	left: toRem(17);
}
.noUi-vertical .noUi-handle:before,
.noUi-vertical .noUi-handle:after {
	width: toRem(14);
	height: toRem(1);
	left: toRem(6);
	top: toRem(14);
}
.noUi-vertical .noUi-handle:after {
	top: toRem(17);
}
/* Disabled state;
 */
[disabled] .noUi-connect {
	background: #b8b8b8;
}
[disabled].noUi-target,
[disabled].noUi-handle,
[disabled] .noUi-handle {
	cursor: not-allowed;
}
/* Base;
 *
 */
.noUi-pips,
.noUi-pips * {
	box-sizing: border-box;
}
.noUi-pips {
	position: absolute;
	color: #999;
}
/* Values;
 *
 */
.noUi-value {
	position: absolute;
	white-space: nowrap;
	text-align: center;
}
.noUi-value-sub {
	color: #ccc;
	font-size: toRem(10);
}
/* Markings;
 *
 */
.noUi-marker {
	position: absolute;
	background: #ccc;
}
.noUi-marker-sub {
	background: #aaa;
}
.noUi-marker-large {
	background: #aaa;
}
/* Horizontal layout;
 *
 */
.noUi-pips-horizontal {
	padding: toRem(10) 0;
	height: toRem(80);
	top: 100%;
	left: 0;
	width: 100%;
}
.noUi-value-horizontal {
	transform: translate(-50%, 50%);
}
.noUi-rtl .noUi-value-horizontal {
	transform: translate(50%, 50%);
}
.noUi-marker-horizontal.noUi-marker {
	margin-left: toRem(-1);
	width: toRem(2);
	height: toRem(5);
}
.noUi-marker-horizontal.noUi-marker-sub {
	height: toRem(10);
}
.noUi-marker-horizontal.noUi-marker-large {
	height: toRem(15);
}
/* Vertical layout;
 *
 */
.noUi-pips-vertical {
	padding: 0 toRem(10);
	height: 100%;
	top: 0;
	left: 100%;
}
.noUi-value-vertical {
	transform: translate(0, -50%);
	padding-left: toRem(25);
}
.noUi-rtl .noUi-value-vertical {
	transform: translate(0, 50%);
}
.noUi-marker-vertical.noUi-marker {
	width: toRem(5);
	height: toRem(2);
	margin-top: toRem(-1);
}
.noUi-marker-vertical.noUi-marker-sub {
	width: toRem(10);
}
.noUi-marker-vertical.noUi-marker-large {
	width: toRem(15);
}
.noUi-tooltip {
	display: block;
	position: absolute;
	border: toRem(1) solid #d9d9d9;
	border-radius: toRem(3);
	background: #fff;
	color: #000;
	padding: toRem(5);
	text-align: center;
	white-space: nowrap;
}
.noUi-horizontal .noUi-tooltip {
	transform: translate(-50%, 0);
	left: 50%;
	bottom: 120%;
}
.noUi-vertical .noUi-tooltip {
	transform: translate(0, -50%);
	top: 50%;
	right: 120%;
}
.noUi-horizontal .noUi-origin > .noUi-tooltip {
	transform: translate(50%, 0);
	left: auto;
	bottom: toRem(10);
}
.noUi-vertical .noUi-origin > .noUi-tooltip {
	transform: translate(0, toRem(-18));
	top: auto;
	right: toRem(28);
}
